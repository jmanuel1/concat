
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C464C6F38A0D0449312DDC93B0B34E95'
    
_lr_action_items = {'STRING':([0,2,4,5,6,7,8,9,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[5,-28,-12,5,-29,5,-32,-34,-30,-11,5,-27,5,-10,5,-31,5,5,5,-33,5,-26,-42,-38,-40,-41,5,5,5,-35,-17,-39,-37,-36,5,-15,-16,-13,5,5,-18,]),'DOLLARSIGN':([0,2,4,5,6,7,8,9,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[16,-28,-12,16,-29,16,-32,-34,-30,-11,16,-27,16,-10,16,-31,16,16,16,-33,16,-26,-42,-38,-40,-41,16,16,16,-35,-17,-39,-37,-36,16,-15,-16,-13,16,16,-18,]),'$end':([0,3,4,10,11,13,14,18,19,20,21,23,26,40,41,44,45,52,54,56,57,62,],[-43,-4,-12,-5,0,-2,-11,-43,-10,-43,-1,-3,-43,-9,-6,-8,-17,-7,-15,-16,-13,-18,]),'INDENT':([55,],[58,]),'DEDENT':([4,14,19,45,54,56,57,59,60,61,62,63,],[-12,-11,-10,-17,-15,-16,-13,62,-19,-20,-18,-21,]),'SEMI':([0,1,2,4,5,6,7,8,9,10,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[24,33,-28,-12,-43,-29,-43,-32,-34,-42,-30,-11,-43,-27,24,-10,24,-31,-43,-43,24,-33,-43,-26,-42,-38,-40,-41,-43,-43,24,-35,-17,-39,-37,-36,24,-15,-16,-13,24,24,-18,]),'ENCODING':([0,4,14,18,19,20,26,45,54,56,57,62,],[18,-12,-11,18,-10,18,18,-17,-15,-16,-13,-18,]),'NEWLINE':([0,1,2,4,5,6,7,8,9,10,12,14,15,17,18,19,20,22,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,42,43,45,48,49,50,51,53,54,56,57,58,61,62,],[20,-22,-28,-12,-43,-29,-43,-32,-34,-42,-30,-11,-43,-27,20,-10,20,-31,-43,-43,20,45,-33,-23,-43,-26,-24,-42,-38,-40,-41,-43,-43,-43,-35,-17,-39,-37,-36,-25,55,-15,-16,-13,-43,-43,-18,]),'PLUS':([16,],[38,]),'NAME':([0,2,4,5,6,7,8,9,12,14,15,16,17,18,19,20,22,24,25,26,28,30,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[15,-28,-12,15,-29,15,-32,-34,-30,-11,15,39,-27,15,-10,15,-31,15,15,15,-33,47,15,-26,-42,-38,-40,-41,15,15,15,-35,-17,-39,-37,-36,15,-15,-16,-13,15,15,-18,]),'ENDMARKER':([3,4,10,13,14,18,19,20,21,23,26,40,41,44,45,52,54,56,57,62,],[-4,-12,-5,-2,-11,-43,-10,-43,-1,-3,-43,-9,-6,52,-17,-7,-15,-16,-13,-18,]),'COLON':([46,47,],[53,-14,]),'NUMBER':([0,2,4,5,6,7,8,9,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[25,-28,-12,25,-29,25,-32,-34,-30,-11,25,-27,25,-10,25,-31,25,25,25,-33,25,-26,-42,-38,-40,-41,25,25,25,-35,-17,-39,-37,-36,25,-15,-16,-13,25,25,-18,]),'DEF':([0,4,14,18,19,20,26,45,54,56,57,58,61,62,],[30,-12,-11,30,-10,30,30,-17,-15,-16,-13,30,30,-18,]),'BIN_BOOL_FUNC':([0,2,4,5,6,7,8,9,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[31,-28,-12,31,-29,31,-32,-34,-30,-11,31,-27,31,-10,31,-31,31,31,31,-33,31,-26,-42,-38,-40,-41,31,31,31,-35,-17,-39,-37,-36,31,-15,-16,-13,31,31,-18,]),'UNARY_BOOL_FUNC':([0,2,4,5,6,7,8,9,12,14,15,17,18,19,20,22,24,25,26,28,31,32,34,35,36,37,38,39,42,43,45,48,49,50,53,54,56,57,58,61,62,],[7,-28,-12,7,-29,7,-32,-34,-30,-11,7,-27,7,-10,7,-31,7,7,7,-33,7,-26,-42,-38,-40,-41,7,7,7,-35,-17,-39,-37,-36,7,-15,-16,-13,7,7,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'simple_stmt':([0,18,20,24,26,42,53,58,61,],[1,1,1,42,1,1,1,1,1,]),'bin_bool_func':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'empty_module':([0,18,20,26,],[3,3,3,3,]),'funcdef':([0,18,20,26,58,61,],[4,4,4,4,4,4,]),'statement_plus':([58,61,],[59,63,]),'unary_bool_func':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'push_func':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'terminated_stmt_list':([0,18,20,26,53,58,61,],[19,19,19,19,54,19,19,]),'empty_expression':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'empty':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[10,34,34,34,10,10,34,34,10,34,34,34,34,34,34,34,]),'module':([0,18,20,26,],[11,40,41,44,]),'func_compose':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'module_statement':([0,18,20,26,],[13,13,13,13,]),'compound_stmt':([0,18,20,26,58,61,],[14,14,14,14,14,14,]),'statement_statement_plus':([58,61,],[60,60,]),'funcname':([30,],[46,]),'implicit_string_push':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'module_encoding':([0,18,20,26,],[21,21,21,21,]),'implicit_number_push':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'module_newline':([0,18,20,26,],[23,23,23,23,]),'statement':([0,18,20,26,58,61,],[26,26,26,26,61,61,]),'stmt_list':([0,18,20,26,42,53,58,61,],[27,27,27,27,51,27,27,27,]),'indented_block':([53,],[56,]),'push_plus':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'semi_stmt_list':([0,18,20,26,42,53,58,61,],[29,29,29,29,29,29,29,29,]),'suite':([53,],[57,]),'expression':([0,5,7,15,18,20,24,25,26,31,38,39,42,53,58,61,],[32,35,36,37,32,32,32,43,32,48,49,50,32,32,32,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('module -> module_encoding','module',1,'p_module','parse.py',14),
  ('module -> module_statement','module',1,'p_module','parse.py',15),
  ('module -> module_newline','module',1,'p_module','parse.py',16),
  ('module -> empty_module','module',1,'p_module','parse.py',17),
  ('empty_module -> empty','empty_module',1,'p_empty_module','parse.py',23),
  ('module_newline -> NEWLINE module','module_newline',2,'p_module_newline','parse.py',28),
  ('module_statement -> statement module ENDMARKER','module_statement',3,'p_module_statment','parse.py',33),
  ('module_statement -> statement module','module_statement',2,'p_module_statment','parse.py',34),
  ('module_encoding -> ENCODING module','module_encoding',2,'p_module_encoding','parse.py',43),
  ('statement -> terminated_stmt_list','statement',1,'p_statement','parse.py',50),
  ('statement -> compound_stmt','statement',1,'p_statement','parse.py',51),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','parse.py',57),
  ('funcdef -> DEF funcname COLON suite','funcdef',4,'p_funcdef','parse.py',62),
  ('funcname -> NAME','funcname',1,'p_funcname','parse.py',73),
  ('suite -> terminated_stmt_list','suite',1,'p_suite','parse.py',78),
  ('suite -> indented_block','suite',1,'p_suite','parse.py',79),
  ('terminated_stmt_list -> stmt_list NEWLINE','terminated_stmt_list',2,'p_terminated_stmt_list','parse.py',85),
  ('indented_block -> NEWLINE INDENT statement_plus DEDENT','indented_block',4,'p_indented_block','parse.py',90),
  ('statement_plus -> statement_statement_plus','statement_plus',1,'p_statement_plus','parse.py',95),
  ('statement_plus -> statement','statement_plus',1,'p_statement_plus','parse.py',96),
  ('statement_statement_plus -> statement statement_plus','statement_statement_plus',2,'p_statement_statement_plus','parse.py',104),
  ('stmt_list -> simple_stmt','stmt_list',1,'p_stmt_list','parse.py',111),
  ('stmt_list -> semi_stmt_list','stmt_list',1,'p_stmt_list','parse.py',112),
  ('stmt_list -> simple_stmt SEMI','stmt_list',2,'p_stmt_list','parse.py',113),
  ('semi_stmt_list -> SEMI simple_stmt stmt_list','semi_stmt_list',3,'p_semi_stmt_list','parse.py',119),
  ('simple_stmt -> expression','simple_stmt',1,'p_simple_stmt','parse.py',124),
  ('expression -> implicit_string_push','expression',1,'p_expression','parse.py',129),
  ('expression -> bin_bool_func','expression',1,'p_expression','parse.py',130),
  ('expression -> unary_bool_func','expression',1,'p_expression','parse.py',131),
  ('expression -> func_compose','expression',1,'p_expression','parse.py',132),
  ('expression -> implicit_number_push','expression',1,'p_expression','parse.py',133),
  ('expression -> push_func','expression',1,'p_expression','parse.py',134),
  ('expression -> push_plus','expression',1,'p_expression','parse.py',135),
  ('expression -> empty_expression','expression',1,'p_expression','parse.py',136),
  ('implicit_number_push -> NUMBER expression','implicit_number_push',2,'p_implicit_number_push','parse.py',142),
  ('push_func -> DOLLARSIGN NAME expression','push_func',3,'p_push_func','parse.py',147),
  ('push_plus -> DOLLARSIGN PLUS expression','push_plus',3,'p_push_plus','parse.py',152),
  ('implicit_string_push -> STRING expression','implicit_string_push',2,'p_implicit_string_push','parse.py',157),
  ('bin_bool_func -> BIN_BOOL_FUNC expression','bin_bool_func',2,'p_bin_bool_func','parse.py',162),
  ('unary_bool_func -> UNARY_BOOL_FUNC expression','unary_bool_func',2,'p_unary_bool_func','parse.py',168),
  ('func_compose -> NAME expression','func_compose',2,'p_func_compose','parse.py',173),
  ('empty_expression -> empty','empty_expression',1,'p_empty_expression','parse.py',178),
  ('empty -> <empty>','empty',0,'p_empty','parse.py',198),
]
