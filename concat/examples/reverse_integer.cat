# IN: '123'
# OUT: '321\n'

# https://leetcode.com/problems/reverse-integer/
# but the 'signed 32-bit int range' requirement is ignored
# also this uses strings instead of bit-fiddling

from builtins import abs
from concat.stdlib.pyinterop import getitem
from concat.stdlib.pyinterop import to_dict
from concat.stdlib.pyinterop import to_slice
from concat.stdlib.pyinterop import to_str

def get_input( -- result:str):
  None to_dict [,] $input py_call cast (str)

def put_output(string:str -- ):
  [(),] None to_dict swap $print py_call drop

def simple_str(obj:object -- string:str):
  None swap None swap to_str

def mag(n:int -- abs_n:int):
  [(),] None to_dict swap $abs py_call cast (int)

get_input dup None swap to_int 0 >= $(num:str: (((0 1 -) None None to_slice) getitem)) $(num:str: ((None None 1 to_slice) getitem) cast (str) '-' + (((0 1 -) None None to_slice) getitem)) choose cast (str) put_output
